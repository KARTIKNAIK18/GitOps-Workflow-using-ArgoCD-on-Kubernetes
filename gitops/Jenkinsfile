pipeline{
    agent any
    environment{
            DOCKER_USER = credentials('DOCKER-USER')
            EMAIL = credentials('git-email')
    }
    stages{
        stage('Cheackout'){
            steps{
                git branch: 'main', url: 'https://github.com/KARTIKNAIK18/GitOps-Workflow-using-ArgoCD-on-Kubernetes.git' 
            }
        }
        stage('Read Files'){
            steps{
                script{
                    FRONTEND_VERSION = readFile ('frontend/version.txt').trim()
                    BACKEND_VERSION = readFile ('backend/version.txt').trim()

                    FRONTENDIMAGE = "${env.DOCKER_USER}/note-app-frontend:${FRONTEND_VERSION}"
                    BACKENDIMAGE = "${env.DOCKER_USER}/note-app-backend:${BACKEND_VERSION}"
                    
                    // Debug output
                    echo "Frontend image: ${FRONTENDIMAGE}"
                    echo "Backend image: ${BACKENDIMAGE}"
                }
            }
        }
        stage('Update Manifests'){
            steps{
                script {
                    sh """
                        echo "Updating manifest with frontend image: ${FRONTENDIMAGE}"
                        sed -i 's|image: .*|image: ${FRONTENDIMAGE}|g' manifests/frontend.yml
                        
                        echo "Updating manifest with backend image: ${BACKENDIMAGE}"
                        sed -i 's|image: .*|image: ${BACKENDIMAGE}|g' manifests/backend.yml
                        
                        echo "Checking updated manifests:"
                        cat manifests/frontend.yml
                        cat manifests/backend.yml
                    """
                }
            }

        }    
        stage('Git Push') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
                        sh """
                            # Configure git
                            git config user.email "${env.EMAIL}"
                            git config user.name "${env.USERNAME}"
                            
                            # Check status and add changes
                            echo "Checking git status"
                            git status
                            
                            echo "Adding changes"
                            git add manifests/
                            
                            # Commit changes if any
                            git diff --staged --quiet || git commit -m "Updated manifests [skip ci]"
                            
                            # Set remote with token and push
                            git remote set-url origin https://${GITHUB_TOKEN}@github.com/KARTIKNAIK18/GitOps-Workflow-using-ArgoCD-on-Kubernetes.git
                            git push origin main
                        """
                    }
                }
            }
        }

}
}
